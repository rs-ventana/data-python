{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "cStiicqDwuwV"
      },
      "source": [
        "# Importación y manejo de datos"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "dIYe6gRL31J2"
      },
      "source": [
        "## Importación del conjunto de datos"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "F6-4XlivvBWA",
        "outputId": "15208ee9-a723-473e-b8a1-5c8be53f2fa2"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        }
      ],
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "collapsed": true,
        "id": "QZbbHnMzv9XS"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "df = pd.read_csv('/content/drive/MyDrive/BEDU/proyecto/data/fao_base.csv')"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "M8vmD9Aa38FG"
      },
      "source": [
        "## Exploración inicial"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 688
        },
        "id": "f07fYFqWw2XA",
        "outputId": "41002d6f-6b19-4a8d-ef8d-dbc3e40a9946"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 1121550 entries, 0 to 1121549\n",
            "Data columns (total 14 columns):\n",
            " #   Column                       Non-Null Count    Dtype  \n",
            "---  ------                       --------------    -----  \n",
            " 0   Código de la encuesta        1121550 non-null  object \n",
            " 1   Encuesta                     1121550 non-null  object \n",
            " 2   Código del nivel geográfico  1121550 non-null  object \n",
            " 3   Nivel geográfico             1121550 non-null  object \n",
            " 4   Código grupo de alimentos    1121550 non-null  object \n",
            " 5   Grupo de alimentos           1121550 non-null  object \n",
            " 6   Código del indicador         1121550 non-null  int64  \n",
            " 7   Indicador                    1121550 non-null  object \n",
            " 8   Código del elemento          1121550 non-null  object \n",
            " 9   Elemento                     1121550 non-null  object \n",
            " 10  Unidad                       1121550 non-null  object \n",
            " 11  Valor                        1121550 non-null  float64\n",
            " 12  Símbolo                      1121550 non-null  object \n",
            " 13  Nota                         1101239 non-null  object \n",
            "dtypes: float64(1), int64(1), object(12)\n",
            "memory usage: 119.8+ MB\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Código de la encuesta           Encuesta Código del nivel geográfico  \\\n",
              "0              004_2020  Afganistán - 2020                       10000   \n",
              "1              004_2020  Afganistán - 2020                       10000   \n",
              "\n",
              "  Nivel geográfico Código grupo de alimentos             Grupo de alimentos  \\\n",
              "0         Nacional                       FG0  Todos los grupos de alimentos   \n",
              "1         Nacional                       FG0  Todos los grupos de alimentos   \n",
              "\n",
              "   Código del indicador                    Indicador Código del elemento  \\\n",
              "0                  3302  Ingesta aparente de energía               6128A   \n",
              "1                  3302  Ingesta aparente de energía               61281   \n",
              "\n",
              "                           Elemento            Unidad   Valor Símbolo  \\\n",
              "0                          Promedio  kcal/persona/día  2352.0       E   \n",
              "1  Confidence interval: Lower bound  kcal/persona/día  2329.0       E   \n",
              "\n",
              "                                                Nota  \n",
              "0  Income, Expenditure and Labour Force Survey, O...  \n",
              "1  Income, Expenditure and Labour Force Survey, O...  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-18f1aacb-d975-4251-b3c3-468bfd67f6db\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Código de la encuesta</th>\n",
              "      <th>Encuesta</th>\n",
              "      <th>Código del nivel geográfico</th>\n",
              "      <th>Nivel geográfico</th>\n",
              "      <th>Código grupo de alimentos</th>\n",
              "      <th>Grupo de alimentos</th>\n",
              "      <th>Código del indicador</th>\n",
              "      <th>Indicador</th>\n",
              "      <th>Código del elemento</th>\n",
              "      <th>Elemento</th>\n",
              "      <th>Unidad</th>\n",
              "      <th>Valor</th>\n",
              "      <th>Símbolo</th>\n",
              "      <th>Nota</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>004_2020</td>\n",
              "      <td>Afganistán - 2020</td>\n",
              "      <td>10000</td>\n",
              "      <td>Nacional</td>\n",
              "      <td>FG0</td>\n",
              "      <td>Todos los grupos de alimentos</td>\n",
              "      <td>3302</td>\n",
              "      <td>Ingesta aparente de energía</td>\n",
              "      <td>6128A</td>\n",
              "      <td>Promedio</td>\n",
              "      <td>kcal/persona/día</td>\n",
              "      <td>2352.0</td>\n",
              "      <td>E</td>\n",
              "      <td>Income, Expenditure and Labour Force Survey, O...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>004_2020</td>\n",
              "      <td>Afganistán - 2020</td>\n",
              "      <td>10000</td>\n",
              "      <td>Nacional</td>\n",
              "      <td>FG0</td>\n",
              "      <td>Todos los grupos de alimentos</td>\n",
              "      <td>3302</td>\n",
              "      <td>Ingesta aparente de energía</td>\n",
              "      <td>61281</td>\n",
              "      <td>Confidence interval: Lower bound</td>\n",
              "      <td>kcal/persona/día</td>\n",
              "      <td>2329.0</td>\n",
              "      <td>E</td>\n",
              "      <td>Income, Expenditure and Labour Force Survey, O...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-18f1aacb-d975-4251-b3c3-468bfd67f6db')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-18f1aacb-d975-4251-b3c3-468bfd67f6db button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-18f1aacb-d975-4251-b3c3-468bfd67f6db');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-063f8c48-8354-4840-bd2a-fc6bd1a53351\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-063f8c48-8354-4840-bd2a-fc6bd1a53351')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-063f8c48-8354-4840-bd2a-fc6bd1a53351 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df"
            }
          },
          "metadata": {},
          "execution_count": 3
        }
      ],
      "source": [
        "# resumen del dataframe\n",
        "df.info()\n",
        "df.head(2)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 609
        },
        "id": "4H7xKhM-oQV4",
        "outputId": "63b41d1b-a991-4eed-b77a-4b9dc87faff2"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['código_de_la_encuesta', 'encuesta', 'código_del_nivel_geográfico', 'nivel_geográfico', 'código_grupo_de_alimentos', 'grupo_de_alimentos', 'código_del_indicador', 'indicador', 'código_del_elemento', 'elemento', 'unidad', 'valor', 'símbolo', 'nota']\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        código_de_la_encuesta              encuesta  \\\n",
              "71832                051_2020        Armenia - 2020   \n",
              "464992               090_2013  Islas Salomón - 2013   \n",
              "565967               404_2016          Kenya - 2016   \n",
              "729508               484_2018         México - 2018   \n",
              "1102929              776_2016          Tonga - 2016   \n",
              "\n",
              "        código_del_nivel_geográfico nivel_geográfico  \\\n",
              "71832                         051_7           KOTAYK   \n",
              "464992                        090_7          Malaita   \n",
              "565967                        404_7          Garissa   \n",
              "729508                       484_18          Nayarit   \n",
              "1102929                       10000         Nacional   \n",
              "\n",
              "        código_grupo_de_alimentos  \\\n",
              "71832                        FG12   \n",
              "464992                        FG0   \n",
              "565967                        FG2   \n",
              "729508                        FG1   \n",
              "1102929                       FG9   \n",
              "\n",
              "                                   grupo_de_alimentos  código_del_indicador  \\\n",
              "71832                               Dulces y azúcares                  3311   \n",
              "464992                  Todos los grupos de alimentos                  3319   \n",
              "565967   Raíces, tubérculos, plátanos y sus productos                  3300   \n",
              "729508                       Cereales y sus productos                  3302   \n",
              "1102929                    Hortalizas y sus productos                  3300   \n",
              "\n",
              "                                                 indicador  \\\n",
              "71832                          Ingesta aparente de potasio   \n",
              "464992   Ingesta aparente de vitamina A (equivalentes d...   \n",
              "565967             Consumo aparente de alimento comestible   \n",
              "729508                         Ingesta aparente de energía   \n",
              "1102929            Consumo aparente de alimento comestible   \n",
              "\n",
              "        código_del_elemento                          elemento  \\\n",
              "71832                 62092  Confidence interval: Upper bound   \n",
              "464992                62072  Confidence interval: Upper bound   \n",
              "565967                61231  Confidence interval: Lower bound   \n",
              "729508                6128A                          Promedio   \n",
              "1102929               61232  Confidence interval: Upper bound   \n",
              "\n",
              "                   unidad  valor símbolo  \\\n",
              "71832      mg/persona/día  110.0       E   \n",
              "464992     μg/persona/día  627.0       E   \n",
              "565967      g/persona/día   19.4       E   \n",
              "729508   kcal/persona/día  519.0       E   \n",
              "1102929     g/persona/día   89.0       E   \n",
              "\n",
              "                                                      nota  \n",
              "71832    Integrated Living Conditions Survey, January 2...  \n",
              "464992   Household Income and Expenditure Survey, Octob...  \n",
              "565967   Integrated Household Budget Survey, September ...  \n",
              "729508   Encuesta Nacional de Ingresos y Gastos de los ...  \n",
              "1102929  Household Income and Expenditure Survey, Octob...  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-be204101-8dbe-4800-b451-7d287de4d482\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>código_de_la_encuesta</th>\n",
              "      <th>encuesta</th>\n",
              "      <th>código_del_nivel_geográfico</th>\n",
              "      <th>nivel_geográfico</th>\n",
              "      <th>código_grupo_de_alimentos</th>\n",
              "      <th>grupo_de_alimentos</th>\n",
              "      <th>código_del_indicador</th>\n",
              "      <th>indicador</th>\n",
              "      <th>código_del_elemento</th>\n",
              "      <th>elemento</th>\n",
              "      <th>unidad</th>\n",
              "      <th>valor</th>\n",
              "      <th>símbolo</th>\n",
              "      <th>nota</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>71832</th>\n",
              "      <td>051_2020</td>\n",
              "      <td>Armenia - 2020</td>\n",
              "      <td>051_7</td>\n",
              "      <td>KOTAYK</td>\n",
              "      <td>FG12</td>\n",
              "      <td>Dulces y azúcares</td>\n",
              "      <td>3311</td>\n",
              "      <td>Ingesta aparente de potasio</td>\n",
              "      <td>62092</td>\n",
              "      <td>Confidence interval: Upper bound</td>\n",
              "      <td>mg/persona/día</td>\n",
              "      <td>110.0</td>\n",
              "      <td>E</td>\n",
              "      <td>Integrated Living Conditions Survey, January 2...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>464992</th>\n",
              "      <td>090_2013</td>\n",
              "      <td>Islas Salomón - 2013</td>\n",
              "      <td>090_7</td>\n",
              "      <td>Malaita</td>\n",
              "      <td>FG0</td>\n",
              "      <td>Todos los grupos de alimentos</td>\n",
              "      <td>3319</td>\n",
              "      <td>Ingesta aparente de vitamina A (equivalentes d...</td>\n",
              "      <td>62072</td>\n",
              "      <td>Confidence interval: Upper bound</td>\n",
              "      <td>μg/persona/día</td>\n",
              "      <td>627.0</td>\n",
              "      <td>E</td>\n",
              "      <td>Household Income and Expenditure Survey, Octob...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>565967</th>\n",
              "      <td>404_2016</td>\n",
              "      <td>Kenya - 2016</td>\n",
              "      <td>404_7</td>\n",
              "      <td>Garissa</td>\n",
              "      <td>FG2</td>\n",
              "      <td>Raíces, tubérculos, plátanos y sus productos</td>\n",
              "      <td>3300</td>\n",
              "      <td>Consumo aparente de alimento comestible</td>\n",
              "      <td>61231</td>\n",
              "      <td>Confidence interval: Lower bound</td>\n",
              "      <td>g/persona/día</td>\n",
              "      <td>19.4</td>\n",
              "      <td>E</td>\n",
              "      <td>Integrated Household Budget Survey, September ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>729508</th>\n",
              "      <td>484_2018</td>\n",
              "      <td>México - 2018</td>\n",
              "      <td>484_18</td>\n",
              "      <td>Nayarit</td>\n",
              "      <td>FG1</td>\n",
              "      <td>Cereales y sus productos</td>\n",
              "      <td>3302</td>\n",
              "      <td>Ingesta aparente de energía</td>\n",
              "      <td>6128A</td>\n",
              "      <td>Promedio</td>\n",
              "      <td>kcal/persona/día</td>\n",
              "      <td>519.0</td>\n",
              "      <td>E</td>\n",
              "      <td>Encuesta Nacional de Ingresos y Gastos de los ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1102929</th>\n",
              "      <td>776_2016</td>\n",
              "      <td>Tonga - 2016</td>\n",
              "      <td>10000</td>\n",
              "      <td>Nacional</td>\n",
              "      <td>FG9</td>\n",
              "      <td>Hortalizas y sus productos</td>\n",
              "      <td>3300</td>\n",
              "      <td>Consumo aparente de alimento comestible</td>\n",
              "      <td>61232</td>\n",
              "      <td>Confidence interval: Upper bound</td>\n",
              "      <td>g/persona/día</td>\n",
              "      <td>89.0</td>\n",
              "      <td>E</td>\n",
              "      <td>Household Income and Expenditure Survey, Octob...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-be204101-8dbe-4800-b451-7d287de4d482')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-be204101-8dbe-4800-b451-7d287de4d482 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-be204101-8dbe-4800-b451-7d287de4d482');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-dcf91824-87f1-4935-ae89-f7efc866f6e9\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dcf91824-87f1-4935-ae89-f7efc866f6e9')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-dcf91824-87f1-4935-ae89-f7efc866f6e9 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"c\\u00f3digo_de_la_encuesta\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"090_2013\",\n          \"776_2016\",\n          \"404_2016\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"encuesta\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Islas Salom\\u00f3n - 2013\",\n          \"Tonga - 2016\",\n          \"Kenya - 2016\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"c\\u00f3digo_del_nivel_geogr\\u00e1fico\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"090_7\",\n          \"10000\",\n          \"404_7\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nivel_geogr\\u00e1fico\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Malaita\",\n          \"Nacional\",\n          \"Garissa\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"c\\u00f3digo_grupo_de_alimentos\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"FG0\",\n          \"FG9\",\n          \"FG2\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"grupo_de_alimentos\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Todos los grupos de alimentos\",\n          \"Hortalizas y sus productos\",\n          \"Ra\\u00edces, tub\\u00e9rculos, pl\\u00e1tanos y sus productos\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"c\\u00f3digo_del_indicador\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 3300,\n        \"max\": 3319,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3319,\n          3302,\n          3311\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"indicador\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Ingesta aparente de vitamina A (equivalentes de retinol)\",\n          \"Ingesta aparente de energ\\u00eda\",\n          \"Ingesta aparente de potasio\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"c\\u00f3digo_del_elemento\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"62072\",\n          \"61232\",\n          \"61231\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"elemento\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Confidence interval: Upper bound\",\n          \"Confidence interval: Lower bound\",\n          \"Promedio\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"unidad\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"\\u03bcg/persona/d\\u00eda\",\n          \"kcal/persona/d\\u00eda\",\n          \"mg/persona/d\\u00eda\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"valor\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 278.6439879128922,\n        \"min\": 19.4,\n        \"max\": 627.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          627.0,\n          89.0,\n          19.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"s\\u00edmbolo\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"E\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nota\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Household Income and Expenditure Survey, October 2012 - October 2013.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 23
        }
      ],
      "source": [
        "# Revisar columnas y una muestra\n",
        "print(df.columns.tolist())\n",
        "df.sample(5)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "J7hnLAXHnQ4y",
        "outputId": "3090a130-010e-48ed-b728-63ad9100d633"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Tamaño de la base: (1121550, 14)\n",
            "\n",
            " -----------------------------------------\n",
            "Tipos de datos:\n",
            " Código de la encuesta           object\n",
            "Encuesta                        object\n",
            "Código del nivel geográfico     object\n",
            "Nivel geográfico                object\n",
            "Código grupo de alimentos       object\n",
            "Grupo de alimentos              object\n",
            "Código del indicador             int64\n",
            "Indicador                       object\n",
            "Código del elemento             object\n",
            "Elemento                        object\n",
            "Unidad                          object\n",
            "Valor                          float64\n",
            "Símbolo                         object\n",
            "Nota                            object\n",
            "dtype: object\n",
            "\n",
            " -----------------------------------------\n",
            "       Código del indicador         Valor\n",
            "count          1.121550e+06  1.121550e+06\n",
            "mean           3.309542e+03  6.897675e+01\n",
            "std            5.475062e+00  2.781034e+02\n",
            "min            3.300000e+03  0.000000e+00\n",
            "25%            3.305000e+03  4.000000e-02\n",
            "50%            3.309000e+03  1.500000e+00\n",
            "75%            3.314000e+03  2.100000e+01\n",
            "max            3.319000e+03  1.003360e+04\n",
            "\n",
            " -----------------------------------------\n"
          ]
        }
      ],
      "source": [
        "# tamaño de la base (filas. columnas)\n",
        "print(f\"Tamaño de la base: {df.shape}\")\n",
        "print(\"\\n -----------------------------------------\")\n",
        "\n",
        "# Tipos de datos\n",
        "print(f\"Tipos de datos:\\n {df.dtypes}\")\n",
        "print(\"\\n -----------------------------------------\")\n",
        "\n",
        "# Resumen estadístico de columnas numéricas\n",
        "print(df.describe())\n",
        "print(\"\\n -----------------------------------------\")\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "oa5u4Bx_w3FO"
      },
      "source": [
        "# Limpieza de datos"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "s6aV3kbF4AjK"
      },
      "source": [
        "## Identificación y tratamiento de valores nulos"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "collapsed": true,
        "id": "BnP0nzeVw5XX",
        "outputId": "5c8923a6-065c-437e-d08f-9fde3759c26b"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Valores vacios por columna:\n",
            " Código de la encuesta              0\n",
            "Encuesta                           0\n",
            "Código del nivel geográfico        0\n",
            "Nivel geográfico                   0\n",
            "Código grupo de alimentos          0\n",
            "Grupo de alimentos                 0\n",
            "Código del indicador               0\n",
            "Indicador                          0\n",
            "Código del elemento                0\n",
            "Elemento                           0\n",
            "Unidad                             0\n",
            "Valor                              0\n",
            "Símbolo                            0\n",
            "Nota                           20311\n",
            "dtype: int64\n",
            "\n",
            "Hay valores nulos en el DataFrame.\n"
          ]
        }
      ],
      "source": [
        "# NaN por columna\n",
        "nan_cols = df.isna().sum()\n",
        "print(f\"Valores vacios por columna:\\n {nan_cols}\\n\" )\n",
        "## ninguno\n",
        "\n",
        "# NaN por renglón\n",
        "# Como la base es muy amplia, exploración del todo\n",
        "if df.isnull().values.any():\n",
        "    print(\"Hay valores nulos en el DataFrame.\")\n",
        "else:\n",
        "    print(\"No hay valores nulos en el DataFrame.\")\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "USa8KyOl4FC8"
      },
      "source": [
        "## Eliminar duplicados"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hxAOBoIri901",
        "outputId": "a20f34be-eea2-4afc-e308-032ba2cc1480"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 1121550 entries, 0 to 1121549\n",
            "Data columns (total 14 columns):\n",
            " #   Column                       Non-Null Count    Dtype  \n",
            "---  ------                       --------------    -----  \n",
            " 0   código_de_la_encuesta        1121550 non-null  object \n",
            " 1   encuesta                     1121550 non-null  object \n",
            " 2   código_del_nivel_geográfico  1121550 non-null  object \n",
            " 3   nivel_geográfico             1121550 non-null  object \n",
            " 4   código_grupo_de_alimentos    1121550 non-null  object \n",
            " 5   grupo_de_alimentos           1121550 non-null  object \n",
            " 6   código_del_indicador         1121550 non-null  int64  \n",
            " 7   indicador                    1121550 non-null  object \n",
            " 8   código_del_elemento          1121550 non-null  object \n",
            " 9   elemento                     1121550 non-null  object \n",
            " 10  unidad                       1121550 non-null  object \n",
            " 11  valor                        1121550 non-null  float64\n",
            " 12  símbolo                      1121550 non-null  object \n",
            " 13  nota                         1101239 non-null  object \n",
            "dtypes: float64(1), int64(1), object(12)\n",
            "memory usage: 119.8+ MB\n"
          ]
        }
      ],
      "source": [
        "# Renombrar variables usando snake case\n",
        "df.columns = df.columns.str.lower().str.replace(' ', '_').str.replace('(', '').str.replace(')', '')\n",
        "df.info()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "wHUQN1zGQQIh"
      },
      "outputs": [],
      "source": [
        "df_fao = df.copy()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1Qef-IWr_Y2W",
        "outputId": "b005e101-f40e-4e02-a3b4-1211e6e94755"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/tmp/ipython-input-2058022177.py:2: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.\n",
            "  df_fao = df_fao.applymap(lambda x: x.strip().lower() if isinstance(x, str) else x)\n"
          ]
        }
      ],
      "source": [
        "# aplicar minusculas y quitar espacios en blanco a todas las celdas\n",
        "df_fao = df_fao.applymap(lambda x: x.strip().lower() if isinstance(x, str) else x)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 147
        },
        "id": "5kUXyIK5a4JI",
        "outputId": "1c1c3321-578d-40d7-ace1-14d300bfaf6c"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                 encuesta nivel_geográfico  \\\n",
              "326352    pakistán - 2012            sindh   \n",
              "2684    afganistán - 2020            farah   \n",
              "\n",
              "                                       grupo_de_alimentos  \\\n",
              "326352  legumbres, semillas y frutos secos y sus produ...   \n",
              "2684                                               varios   \n",
              "\n",
              "                          indicador  elemento          unidad   valor   año  \\\n",
              "326352  ingesta aparente de tiamina  promedio  mg/persona/día    0.05  2012   \n",
              "2684    ingesta aparente de potasio  promedio  mg/persona/día  486.00  2020   \n",
              "\n",
              "              pais  \n",
              "326352    pakistán  \n",
              "2684    afganistán  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f26a1198-dd42-410b-a19c-48b95ebf9a9a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>encuesta</th>\n",
              "      <th>nivel_geográfico</th>\n",
              "      <th>grupo_de_alimentos</th>\n",
              "      <th>indicador</th>\n",
              "      <th>elemento</th>\n",
              "      <th>unidad</th>\n",
              "      <th>valor</th>\n",
              "      <th>año</th>\n",
              "      <th>pais</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>326352</th>\n",
              "      <td>pakistán - 2012</td>\n",
              "      <td>sindh</td>\n",
              "      <td>legumbres, semillas y frutos secos y sus produ...</td>\n",
              "      <td>ingesta aparente de tiamina</td>\n",
              "      <td>promedio</td>\n",
              "      <td>mg/persona/día</td>\n",
              "      <td>0.05</td>\n",
              "      <td>2012</td>\n",
              "      <td>pakistán</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2684</th>\n",
              "      <td>afganistán - 2020</td>\n",
              "      <td>farah</td>\n",
              "      <td>varios</td>\n",
              "      <td>ingesta aparente de potasio</td>\n",
              "      <td>promedio</td>\n",
              "      <td>mg/persona/día</td>\n",
              "      <td>486.00</td>\n",
              "      <td>2020</td>\n",
              "      <td>afganistán</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f26a1198-dd42-410b-a19c-48b95ebf9a9a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f26a1198-dd42-410b-a19c-48b95ebf9a9a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f26a1198-dd42-410b-a19c-48b95ebf9a9a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-15dede0e-5900-4ea6-aed9-a068dbb4b57b\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-15dede0e-5900-4ea6-aed9-a068dbb4b57b')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-15dede0e-5900-4ea6-aed9-a068dbb4b57b button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df_fao\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"encuesta\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"afganist\\u00e1n - 2020\",\n          \"pakist\\u00e1n - 2012\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nivel_geogr\\u00e1fico\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"farah\",\n          \"sindh\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"grupo_de_alimentos\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"varios\",\n          \"legumbres, semillas y frutos secos y sus productos\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"indicador\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"ingesta aparente de potasio\",\n          \"ingesta aparente de tiamina\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"elemento\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"promedio\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"unidad\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"mg/persona/d\\u00eda\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"valor\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 343.61854031760276,\n        \"min\": 0.05,\n        \"max\": 486.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          486.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"a\\u00f1o\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 2012,\n        \"max\": 2020,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2020\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pais\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"afganist\\u00e1n\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 24
        }
      ],
      "source": [
        "# eliminar columnas\n",
        "df_fao.drop(columns=['código_del_elemento', 'símbolo', 'nota', 'código_del_nivel_geográfico', 'código_de_la_encuesta', 'código_grupo_de_alimentos', 'código_del_indicador'],  errors='ignore', inplace=True)\n",
        "df_fao.sample(2)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tz1u4cxNobnW",
        "outputId": "ec5305ca-4124-4033-d79d-4c6f242142c5"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Duplicados: 0\n"
          ]
        }
      ],
      "source": [
        "#valores duplicados\n",
        "print(\"Duplicados:\", df_fao.duplicated().sum())\n",
        "\n",
        "# quitar espacios en blanco\n",
        "df_fao.columns = df_fao.columns.str.strip()\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# usar solo valores promedio\n",
        "df_fao = df_fao.loc[df_fao['elemento'] == \"promedio\"]"
      ],
      "metadata": {
        "id": "Rdjtsuug9pYB"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "eOwp3W8t4J-6"
      },
      "source": [
        "## Preparar los datos para el análisis"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dxagKbCOI9bs",
        "outputId": "541c74d4-0ff1-4929-99b9-2adf63253f2f"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 401294 entries, 0 to 401293\n",
            "Data columns (total 9 columns):\n",
            " #   Column              Non-Null Count   Dtype  \n",
            "---  ------              --------------   -----  \n",
            " 0   encuesta            401294 non-null  object \n",
            " 1   nivel_geográfico    401294 non-null  object \n",
            " 2   grupo_de_alimentos  401294 non-null  object \n",
            " 3   indicador           401294 non-null  object \n",
            " 4   elemento            401294 non-null  object \n",
            " 5   unidad              401294 non-null  object \n",
            " 6   valor               401294 non-null  float64\n",
            " 7   año                 401294 non-null  int64  \n",
            " 8   pais                401294 non-null  object \n",
            "dtypes: float64(1), int64(1), object(7)\n",
            "memory usage: 27.6+ MB\n"
          ]
        }
      ],
      "source": [
        "# Nueva columna para año\n",
        "df_fao['año'] = df_fao['encuesta'].str[-4:].astype(int)\n",
        "\n",
        "# Nueva columna para país\n",
        "df_fao['pais'] = df_fao['encuesta'].str.split(\" - \").str[0]\n",
        "\n",
        "df_fao.info()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        },
        "id": "GLUr_5GVsODr",
        "outputId": "0e7ab3db-e9dd-4926-9d79-494a65febff2"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            encuesta nivel_geográfico             grupo_de_alimentos  \\\n",
              "0  afganistán - 2020         nacional  todos los grupos de alimentos   \n",
              "1  afganistán - 2020         nacional  todos los grupos de alimentos   \n",
              "\n",
              "                       indicador  elemento            unidad   valor   año  \\\n",
              "0    ingesta aparente de energía  promedio  kcal/persona/día  2352.0  2020   \n",
              "1  ingesta aparente de proteínas  promedio     g/persona/día    59.6  2020   \n",
              "\n",
              "         pais  \n",
              "0  afganistán  \n",
              "1  afganistán  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-cf3ad518-45bb-4b94-abde-9d4878dacd43\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>encuesta</th>\n",
              "      <th>nivel_geográfico</th>\n",
              "      <th>grupo_de_alimentos</th>\n",
              "      <th>indicador</th>\n",
              "      <th>elemento</th>\n",
              "      <th>unidad</th>\n",
              "      <th>valor</th>\n",
              "      <th>año</th>\n",
              "      <th>pais</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>afganistán - 2020</td>\n",
              "      <td>nacional</td>\n",
              "      <td>todos los grupos de alimentos</td>\n",
              "      <td>ingesta aparente de energía</td>\n",
              "      <td>promedio</td>\n",
              "      <td>kcal/persona/día</td>\n",
              "      <td>2352.0</td>\n",
              "      <td>2020</td>\n",
              "      <td>afganistán</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>afganistán - 2020</td>\n",
              "      <td>nacional</td>\n",
              "      <td>todos los grupos de alimentos</td>\n",
              "      <td>ingesta aparente de proteínas</td>\n",
              "      <td>promedio</td>\n",
              "      <td>g/persona/día</td>\n",
              "      <td>59.6</td>\n",
              "      <td>2020</td>\n",
              "      <td>afganistán</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cf3ad518-45bb-4b94-abde-9d4878dacd43')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-cf3ad518-45bb-4b94-abde-9d4878dacd43 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-cf3ad518-45bb-4b94-abde-9d4878dacd43');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-5b4447cc-bb9b-4de0-92bd-49108e07fc81\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5b4447cc-bb9b-4de0-92bd-49108e07fc81')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-5b4447cc-bb9b-4de0-92bd-49108e07fc81 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_fao"
            }
          },
          "metadata": {},
          "execution_count": 27
        }
      ],
      "source": [
        "# reindexar\n",
        "df_fao.reset_index(drop=True, inplace=True)\n",
        "df_fao.head(2)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "DhdP7zGB4cZk"
      },
      "source": [
        "# Análisis exploratorio"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 174
        },
        "id": "vdUBeNc8vtMg",
        "outputId": "f026fc3f-3dd5-4bc7-ac32-6312473ed216"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                 encuesta nivel_geográfico        grupo_de_alimentos  \\\n",
              "count              401294           401294                    401294   \n",
              "unique                 57              614                        21   \n",
              "top     bangladesh - 2016         nacional  cereales y sus productos   \n",
              "freq                22725            18788                     21533   \n",
              "\n",
              "                          indicador  elemento          unidad    pais  \n",
              "count                        401294    401294          401294  401294  \n",
              "unique                           19         1               4      34  \n",
              "top     ingesta aparente de energía  promedio  mg/persona/día  méxico  \n",
              "freq                          22958    401294          208979   51272  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-583f0037-53ce-4e86-ac8d-19d2b7779887\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>encuesta</th>\n",
              "      <th>nivel_geográfico</th>\n",
              "      <th>grupo_de_alimentos</th>\n",
              "      <th>indicador</th>\n",
              "      <th>elemento</th>\n",
              "      <th>unidad</th>\n",
              "      <th>pais</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>401294</td>\n",
              "      <td>401294</td>\n",
              "      <td>401294</td>\n",
              "      <td>401294</td>\n",
              "      <td>401294</td>\n",
              "      <td>401294</td>\n",
              "      <td>401294</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>unique</th>\n",
              "      <td>57</td>\n",
              "      <td>614</td>\n",
              "      <td>21</td>\n",
              "      <td>19</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>34</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>top</th>\n",
              "      <td>bangladesh - 2016</td>\n",
              "      <td>nacional</td>\n",
              "      <td>cereales y sus productos</td>\n",
              "      <td>ingesta aparente de energía</td>\n",
              "      <td>promedio</td>\n",
              "      <td>mg/persona/día</td>\n",
              "      <td>méxico</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>freq</th>\n",
              "      <td>22725</td>\n",
              "      <td>18788</td>\n",
              "      <td>21533</td>\n",
              "      <td>22958</td>\n",
              "      <td>401294</td>\n",
              "      <td>208979</td>\n",
              "      <td>51272</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-583f0037-53ce-4e86-ac8d-19d2b7779887')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-583f0037-53ce-4e86-ac8d-19d2b7779887 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-583f0037-53ce-4e86-ac8d-19d2b7779887');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-04d80650-e0d7-44a0-ba85-f7974a285752\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-04d80650-e0d7-44a0-ba85-f7974a285752')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-04d80650-e0d7-44a0-ba85-f7974a285752 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df_fao\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"encuesta\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          57,\n          \"22725\",\n          \"401294\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nivel_geogr\\u00e1fico\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          614,\n          \"18788\",\n          \"401294\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"grupo_de_alimentos\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          21,\n          \"21533\",\n          \"401294\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"indicador\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          19,\n          \"22958\",\n          \"401294\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"elemento\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"401294\",\n          1,\n          \"promedio\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"unidad\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          4,\n          \"208979\",\n          \"401294\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pais\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          34,\n          \"51272\",\n          \"401294\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 28
        }
      ],
      "source": [
        "# describir las columnas incluso con string\n",
        "df_fao.describe(include='object')"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "_slAtpX88FPR"
      },
      "source": [
        "Filtrar y ordenar los datos para extraer información relevante"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "bNNa3WpD4tms"
      },
      "source": [
        "### Grupo de alimentos más consumidos a nivel mundial de 2010 a 2023"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "G_J9lO8jTAJV",
        "outputId": "31491d8c-01c9-4fb7-e161-58fd55324fb2"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Grupos de alimentos más consumidos a nivel nacional:\n",
            "grupo_de_alimentos\n",
            "cereales y sus productos                              1011\n",
            "legumbres, semillas y frutos secos y sus productos    1011\n",
            "raíces, tubérculos, plátanos y sus productos          1011\n",
            "huevos y sus productos                                1011\n",
            "leche y productos lácteos                             1011\n",
            "especias y condimentos                                1011\n",
            "bebidas                                               1011\n",
            "pescado, marisco y sus productos                      1011\n",
            "carne y productos cárnicos                            1011\n",
            "hortalizas y sus productos                            1011\n",
            "Name: count, dtype: int64\n"
          ]
        }
      ],
      "source": [
        "# Grupos de alimentos más consumidos a nivel nacional\n",
        "alimentos_nacional = df_fao[df_fao['nivel_geográfico'] == 'nacional']['grupo_de_alimentos'].value_counts().head(10)\n",
        "print(\"Grupos de alimentos más consumidos a nivel nacional:\")\n",
        "print (alimentos_nacional)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WD2fdRxo0tLl",
        "outputId": "733d53b3-6a30-44a0-a3f3-1342830c2b5d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Grupos de alimentos más consumidos a nivel rural:\n",
            "grupo_de_alimentos\n",
            "cereales y sus productos                              942\n",
            "legumbres, semillas y frutos secos y sus productos    942\n",
            "raíces, tubérculos, plátanos y sus productos          942\n",
            "huevos y sus productos                                942\n",
            "leche y productos lácteos                             942\n",
            "especias y condimentos                                942\n",
            "bebidas                                               942\n",
            "pescado, marisco y sus productos                      942\n",
            "carne y productos cárnicos                            942\n",
            "hortalizas y sus productos                            942\n",
            "Name: count, dtype: int64\n"
          ]
        }
      ],
      "source": [
        "# Grupos de alimentos más consumidos a nivel rural\n",
        "alimentos_rural = df_fao[df_fao['nivel_geográfico'] == 'rural']['grupo_de_alimentos'].value_counts().head(10)\n",
        "print(\"Grupos de alimentos más consumidos a nivel rural:\")\n",
        "print (alimentos_rural)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Q8DZax9G7RNc",
        "outputId": "733865de-b89a-4e38-8bb1-3435f90e3bbb"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Grupos de alimentos más consumidos a nivel urbano:\n",
            "grupo_de_alimentos\n",
            "cereales y sus productos                              959\n",
            "legumbres, semillas y frutos secos y sus productos    959\n",
            "raíces, tubérculos, plátanos y sus productos          959\n",
            "huevos y sus productos                                959\n",
            "leche y productos lácteos                             959\n",
            "especias y condimentos                                959\n",
            "bebidas                                               959\n",
            "pescado, marisco y sus productos                      959\n",
            "carne y productos cárnicos                            959\n",
            "hortalizas y sus productos                            959\n",
            "Name: count, dtype: int64\n"
          ]
        }
      ],
      "source": [
        "# Grupos de alimentos más consumidos a nivel urbano\n",
        "alimentos_urbano = df_fao[df_fao['nivel_geográfico'] == 'urbano']['grupo_de_alimentos'].value_counts().head(10)\n",
        "print(\"Grupos de alimentos más consumidos a nivel urbano:\")\n",
        "print (alimentos_urbano)"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Calcular el monto total de gasto en alimentos en los hogares a nivel país por quintiles."
      ],
      "metadata": {
        "id": "Efdj2rGYeFGR"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#filtar por quintiles\n",
        "\n",
        "# quintil de ingreso más bajo\n",
        "# quintil de ingreso 2\n",
        "# quintil de ingreso 3\n",
        "# quintil de ingreso 4\n",
        "# quintil de ingreso más alto\n",
        "\n",
        "#filtrar solo por quintiles y por mexico\n",
        "datos_quintiles = df_fao[df_fao['nivel_geográfico'].str.contains('quintil')]\n",
        "dq_mexico = datos_quintiles[datos_quintiles['pais'].str.contains('méxico')]\n",
        "dq_mexico.sample(2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 147
        },
        "id": "TXzk08cxfW9u",
        "outputId": "6707229f-daee-4a90-f781-33c138c88e8b",
        "collapsed": true
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             encuesta             nivel_geográfico grupo_de_alimentos  \\\n",
              "251531  méxico - 2014  quintil de ingreso más alto  platos compuestos   \n",
              "253453  méxico - 2018         quintil de ingreso 2             varios   \n",
              "\n",
              "                                                indicador  elemento  \\\n",
              "251531  ingesta aparente de vitamina a (equivalentes d...  promedio   \n",
              "253453                   ingesta aparente de vitamina b12  promedio   \n",
              "\n",
              "                unidad  valor   año    pais  \n",
              "251531  μg/persona/día  38.00  2014  méxico  \n",
              "253453  μg/persona/día   0.46  2018  méxico  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-68322aa6-1a30-45c6-b5b6-c32a3094564b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>encuesta</th>\n",
              "      <th>nivel_geográfico</th>\n",
              "      <th>grupo_de_alimentos</th>\n",
              "      <th>indicador</th>\n",
              "      <th>elemento</th>\n",
              "      <th>unidad</th>\n",
              "      <th>valor</th>\n",
              "      <th>año</th>\n",
              "      <th>pais</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>251531</th>\n",
              "      <td>méxico - 2014</td>\n",
              "      <td>quintil de ingreso más alto</td>\n",
              "      <td>platos compuestos</td>\n",
              "      <td>ingesta aparente de vitamina a (equivalentes d...</td>\n",
              "      <td>promedio</td>\n",
              "      <td>μg/persona/día</td>\n",
              "      <td>38.00</td>\n",
              "      <td>2014</td>\n",
              "      <td>méxico</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>253453</th>\n",
              "      <td>méxico - 2018</td>\n",
              "      <td>quintil de ingreso 2</td>\n",
              "      <td>varios</td>\n",
              "      <td>ingesta aparente de vitamina b12</td>\n",
              "      <td>promedio</td>\n",
              "      <td>μg/persona/día</td>\n",
              "      <td>0.46</td>\n",
              "      <td>2018</td>\n",
              "      <td>méxico</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-68322aa6-1a30-45c6-b5b6-c32a3094564b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-68322aa6-1a30-45c6-b5b6-c32a3094564b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-68322aa6-1a30-45c6-b5b6-c32a3094564b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-d68c11c7-b26e-40a5-90c0-76e002033f2d\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d68c11c7-b26e-40a5-90c0-76e002033f2d')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-d68c11c7-b26e-40a5-90c0-76e002033f2d button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"dq_mexico\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"encuesta\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"m\\u00e9xico - 2018\",\n          \"m\\u00e9xico - 2014\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nivel_geogr\\u00e1fico\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"quintil de ingreso 2\",\n          \"quintil de ingreso m\\u00e1s alto\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"grupo_de_alimentos\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"varios\",\n          \"platos compuestos\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"indicador\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"ingesta aparente de vitamina b12\",\n          \"ingesta aparente de vitamina a (equivalentes de retinol)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"elemento\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"promedio\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"unidad\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u03bcg/persona/d\\u00eda\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"valor\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26.54478856574299,\n        \"min\": 0.46,\n        \"max\": 38.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.46\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"a\\u00f1o\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 2014,\n        \"max\": 2018,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2018\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pais\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"m\\u00e9xico\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# solo 2012\n",
        "quintil_2012 = dq_mexico[(dq_mexico['año'] == 2012)]\n",
        "total_2012 = quintil_2012.groupby('nivel_geográfico')['valor'].sum()\n",
        "print(total_2012)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kzH2b3E4Age_",
        "outputId": "65283f39-f90f-4289-b5d9-9b7db9ab45fc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "nivel_geográfico\n",
            "quintil de ingreso 2           25859.24\n",
            "quintil de ingreso 3           28405.74\n",
            "quintil de ingreso 4           32386.46\n",
            "quintil de ingreso más alto    43759.30\n",
            "quintil de ingreso más bajo    21390.53\n",
            "Name: valor, dtype: float64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 2023\n",
        "quintil_2022 = dq_mexico[(dq_mexico['año'] == 2022)]\n",
        "total_2022 = quintil_2022.groupby('nivel_geográfico')['valor'].sum()\n",
        "print(total_2022)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6sQI-CFZLHL4",
        "outputId": "5bdf7a5a-b6eb-4939-90b6-8cd233e52c2e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "nivel_geográfico\n",
            "quintil de ingreso 2           23575.76\n",
            "quintil de ingreso 3           27151.62\n",
            "quintil de ingreso 4           31550.85\n",
            "quintil de ingreso más alto    42707.62\n",
            "quintil de ingreso más bajo    18609.06\n",
            "Name: valor, dtype: float64\n"
          ]
        }
      ]
    }
  ],
  "metadata": {
    "colab": {
      "collapsed_sections": [
        "cStiicqDwuwV",
        "dIYe6gRL31J2",
        "M8vmD9Aa38FG"
      ],
      "provenance": [],
      "toc_visible": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}